/*!
 * DataTables Select Extension for Delafiber System
 * Extensión de selección para tablas de datos
 */

(function(factory) {
    'use strict';

    if (typeof define === 'function' && define.amd) {
        // AMD
        define(['jquery', 'datatables.net'], function($) {
            return factory($, window, document);
        });
    } else if (typeof exports === 'object') {
        // CommonJS
        module.exports = function(root, $) {
            if (!root) root = window;
            if (!$ || !$.fn.dataTable) $ = require('datatables.net')(root, $).$;
            return factory($, root, root.document);
        };
    } else {
        // Browser
        factory(jQuery, window, document);
    }

}(function($, window, document, undefined) {
    'use strict';

    var DataTable = $.fn.dataTable;

    // Verificar que DataTables esté disponible
    if (!DataTable) {
        console.error('DataTables Select requiere DataTables');
        return;
    }

    /**
     * Extensión Select para DataTables
     */
    DataTable.select = {
        version: '1.0.0-delafiber',
        
        /**
         * Inicializar funcionalidad de selección
         */
        init: function(dt, config) {
            var api = dt.api();
            var settings = api.settings()[0];
            
            // Configuración por defecto
            var defaults = {
                style: 'multi',
                selector: 'td',
                items: 'row',
                info: true,
                className: 'selected'
            };
            
            settings._select = $.extend(true, defaults, config);
            
            // Configurar eventos
            this._setupEvents(api, settings);
            
            // Agregar botones de selección si están habilitados
            if (settings._select.info) {
                this._addSelectionInfo(api);
            }
            
            return api;
        },

        /**
         * Configurar eventos de selección
         */
        _setupEvents: function(api, settings) {
            var self = this;
            var table = api.table().node();
            
            // Evento de clic en filas
            $(table).on('click.dt-select', settings._select.selector, function(e) {
                if ($(e.target).closest('button, a, input, select').length) {
                    return;
                }
                
                var row = api.row($(this).closest('tr'));
                if (row.any()) {
                    self._toggleRowSelection(api, row, settings, e);
                }
            });
            
            // Selección múltiple con Ctrl/Cmd
            $(table).on('click.dt-select', 'tbody tr', function(e) {
                if (settings._select.style === 'multi' && (e.ctrlKey || e.metaKey)) {
                    e.preventDefault();
                }
            });
            
            // Checkbox en header para seleccionar todo
            $(table).on('change.dt-select', 'thead input[type="checkbox"]', function() {
                if (this.checked) {
                    self._selectAll(api, settings);
                } else {
                    self._deselectAll(api, settings);
                }
            });
        },

        /**
         * Toggle selección de fila
         */
        _toggleRowSelection: function(api, row, settings, event) {
            var node = row.node();
            var isSelected = $(node).hasClass(settings._select.className);
            
            if (settings._select.style === 'single') {
                // Limpiar selección anterior en modo single
                this._deselectAll(api, settings);
            }
            
            if (isSelected) {
                this._deselectRow(api, row, settings);
            } else {
                this._selectRow(api, row, settings);
            }
            
            this._updateSelectionInfo(api, settings);
            
            // Disparar evento personalizado
            $(api.table().node()).trigger('select.dt', [row, isSelected ? 'deselected' : 'selected']);
        },

        /**
         * Seleccionar fila
         */
        _selectRow: function(api, row, settings) {
            var node = row.node();
            $(node).addClass(settings._select.className);
            
            // Marcar checkbox si existe
            $(node).find('input[type="checkbox"]').prop('checked', true);
        },

        /**
         * Deseleccionar fila
         */
        _deselectRow: function(api, row, settings) {
            var node = row.node();
            $(node).removeClass(settings._select.className);
            
            // Desmarcar checkbox si existe
            $(node).find('input[type="checkbox"]').prop('checked', false);
        },

        /**
         * Seleccionar todas las filas
         */
        _selectAll: function(api, settings) {
            var self = this;
            api.rows({page: 'current'}).every(function() {
                self._selectRow(api, this, settings);
            });
            this._updateSelectionInfo(api, settings);
        },

        /**
         * Deseleccionar todas las filas
         */
        _deselectAll: function(api, settings) {
            var self = this;
            api.rows('.selected').every(function() {
                self._deselectRow(api, this, settings);
            });
            this._updateSelectionInfo(api, settings);
            
            // Desmarcar checkbox del header
            $(api.table().header()).find('input[type="checkbox"]').prop('checked', false);
        },

        /**
         * Agregar información de selección
         */
        _addSelectionInfo: function(api) {
            var wrapper = $(api.table().container());
            var info = $('<div class="dt-select-info" style="margin-top: 10px; font-size: 0.9em; color: #666;"></div>');
            wrapper.find('.dataTables_info').after(info);
        },

        /**
         * Actualizar información de selección
         */
        _updateSelectionInfo: function(api, settings) {
            if (!settings._select.info) return;
            
            var selected = api.rows('.selected').count();
            var total = api.rows().count();
            var info = $(api.table().container()).find('.dt-select-info');
            
            if (selected > 0) {
                info.html('<i class="fas fa-check-circle text-success"></i> ' + selected + ' de ' + total + ' elementos seleccionados');
                info.show();
            } else {
                info.hide();
            }
        }
    };

    /**
     * API Extensions
     */
    DataTable.Api.register('select()', function() {
        return this;
    });

    DataTable.Api.register('select.style()', function(style) {
        if (style === undefined) {
            return this.context[0]._select.style;
        }
        
        this.context[0]._select.style = style;
        return this;
    });

    DataTable.Api.register('rows().select()', function() {
        var api = this;
        var settings = api.settings()[0];
        
        this.each(function() {
            DataTable.select._selectRow(api, this, settings);
        });
        
        DataTable.select._updateSelectionInfo(api, settings);
        return this;
    });

    DataTable.Api.register('rows().deselect()', function() {
        var api = this;
        var settings = api.settings()[0];
        
        this.each(function() {
            DataTable.select._deselectRow(api, this, settings);
        });
        
        DataTable.select._updateSelectionInfo(api, settings);
        return this;
    });

    DataTable.Api.register('rows.selected()', function() {
        return this.rows('.selected');
    });

    /**
     * Configuración automática
     */
    $(document).on('init.dt', function(e, settings) {
        if (e.namespace !== 'dt') return;
        
        var init = settings.oInit.select;
        var defaults = DataTable.defaults.select;
        
        if (init || defaults) {
            var config = $.extend({}, defaults, init);
            DataTable.select.init(new DataTable.Api(settings), config);
        }
    });

    /**
     * Defaults
     */
    DataTable.defaults.select = {
        style: 'os',
        selector: 'td',
        items: 'row',
        info: true,
        className: 'selected'
    };

    /**
     * Helper functions para uso fácil
     */
    window.DelafiberDataTables = {
        /**
         * Inicializar tabla con selección
         */
        initSelectableTable: function(tableId, options) {
            var defaults = {
                select: {
                    style: 'multi',
                    selector: 'td:not(:last-child)',
                    info: true
                },
                language: {
                    url: '//cdn.datatables.net/plug-ins/1.13.7/i18n/es-ES.json'
                },
                responsive: true,
                pageLength: 25,
                dom: 'Bfrtip',
                buttons: [
                    {
                        text: 'Seleccionar Todo',
                        action: function(e, dt) {
                            dt.rows({page: 'current'}).select();
                        }
                    },
                    {
                        text: 'Deseleccionar Todo',
                        action: function(e, dt) {
                            dt.rows().deselect();
                        }
                    },
                    'excel', 'pdf'
                ]
            };
            
            var config = $.extend(true, defaults, options);
            return $('#' + tableId).DataTable(config);
        },

        /**
         * Obtener IDs de filas seleccionadas
         */
        getSelectedIds: function(table, idColumn) {
            idColumn = idColumn || 0;
            var selected = [];
            
            table.rows('.selected').every(function() {
                var data = this.data();
                selected.push(data[idColumn]);
            });
            
            return selected;
        },

        /**
         * Obtener datos de filas seleccionadas
         */
        getSelectedData: function(table) {
            var selected = [];
            
            table.rows('.selected').every(function() {
                selected.push(this.data());
            });
            
            return selected;
        }
    };

    console.log('✅ DataTables Select Extension cargada - Sistema Delafiber');

    return DataTable.select;

}));